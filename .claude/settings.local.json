{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "mcp__ide__getDiagnostics",
      "Bash(cat:*)",
      "Bash(wsl:*)",
      "Bash(tree:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Read(//d/**)",
      "Bash(python3:*)",
      "Bash(awk:*)",
      "Bash(aws cloudformation delete-stack:*)",
      "Bash(aws cloudformation describe-stacks:*)",
      "Bash(aws cloudformation wait:*)",
      "Bash(aws cloudformation create-stack:*)",
      "Bash(aws cloudformation describe-stack-events:*)",
      "Bash(for dir in functions/*/)",
      "Bash(done)",
      "Bash(sam deploy:*)",
      "Bash(aws cloudformation list-change-sets:*)",
      "Bash(aws cloudformation package:*)",
      "Bash(aws s3 mb:*)",
      "Bash(aws cloudformation list-stack-resources:*)",
      "Bash(aws cloudformation deploy:*)",
      "Bash(aws lambda list-aliases:*)",
      "Bash(aws lambda invoke:*)",
      "Bash(timeout 60 python -m sam_deploy)",
      "Bash(aws s3 ls:*)",
      "Bash(aws s3 rb:*)",
      "Bash(aws s3api list-object-versions:*)",
      "Bash(while read key versionId)",
      "Bash(do aws s3api delete-object --bucket aws-sam-cli-managed-default-samclisourcebucket-ivwvktihli2u --key \"$key\" --version-id \"$versionId\")",
      "Bash(pip show:*)",
      "WebFetch(domain:boto3.amazonaws.com)",
      "Bash(where python)",
      "Bash(.venv/Scripts/python:*)",
      "Bash(.venv/Scripts/pip install:*)",
      "Bash(poetry install:*)",
      "Bash(poetry env info:*)",
      "Bash(poetry run python -c \"import boto3; client = boto3.client(''cognito-idp'', region_name=''ap-south-1''); print(f''boto3: {boto3.__version__}''); print(f''Has API: {hasattr(client, \"\"describe_managed_login_branding_by_client\"\")}'')\")",
      "Bash(poetry add:*)",
      "Bash(poetry run python -c \"import boto3, sys; client = boto3.client(''cognito-idp'', region_name=''ap-south-1''); print(f''Python: {sys.executable}''); print(f''boto3: {boto3.__version__}''); print(f''Has API: {hasattr(client, \"\"describe_managed_login_branding_by_client\"\")}'')\")",
      "Bash(poetry run python:*)",
      "Bash(test -f \"C:/Users/Kshitiz/AppData/Local/pypoetry/Cache/virtualenvs/sam-deploy-w3iSKFlr-py3.12/Scripts/python.exe\")",
      "Bash(test:*)",
      "Bash(xargs:*)",
      "Bash(cmd /c:*)",
      "Bash(git log:*)",
      "Bash(poetry lock:*)",
      "Bash(aws secretsmanager get-secret-value:*)"
    ],
    "deny": [],
    "ask": []
  }
}
