# generated by datamodel-codegen:
#   filename:  budget_usage.json
#   timestamp: 2025-07-23T04:04:30+00:00

from __future__ import annotations

from datetime import datetime

from pydantic import BaseModel, Field


class BudgetUsageError(BaseModel):
    """
    The Error Response Object.
    """

    class Config:
        validate_by_name= True

    code: str | None = Field(
        None, description='An enumerated error code for machine use.'
    )
    details: str | None = Field(
        None, description='A human-readable description of the response.'
    )


class BudgetUsageCampaign(BaseModel):
    class Config:
        validate_by_name= True

    budget_usage_percent: float | None = Field(
        None,
        alias='budgetUsagePercent',
        description='Budget usage percentage (spend / available budget) for the given budget policy.',
    )
    campaign_id: str | None = Field(
        None, alias='campaignId', description='ID of requested resource'
    )
    usage_updated_timestamp: datetime | None = Field(
        None,
        alias='usageUpdatedTimestamp',
        description='Last evaluation time for budget usage',
    )
    index: float | None = Field(
        None, description='An index to maintain order of the campaignIds'
    )
    budget: float | None = Field(
        None, description='Budget amount of resource requested'
    )


class BudgetUsageCampaignBatchError(BaseModel):
    class Config:
        validate_by_name= True

    code: str | None = Field(
        None, description='An enumerated error code for machine use.'
    )
    campaign_id: str | None = Field(
        None, alias='campaignId', description='ID of requested resource'
    )
    index: float | None = Field(
        None, description='An index to maintain order of the campaignIds'
    )
    details: str | None = Field(
        None, description='A human-readable description of the response.'
    )


class BudgetUsageCampaignRequest(BaseModel):
    class Config:
        validate_by_name= True

    campaign_ids: list[str] | None = Field(
        None,
        alias='campaignIds',
        description='A list of campaign IDs',
        max_items=100,
        min_items=1,
    )


class BudgetUsageCampaignResponse(BaseModel):
    class Config:
        validate_by_name= True

    success: list[BudgetUsageCampaign] | None = Field(
        None,
        description='List of budget usage percentages that were successfully pulled',
    )
    error: list[BudgetUsageCampaignBatchError] | None = Field(
        None, description='List of budget usage percentages that failed to pull'
    )
